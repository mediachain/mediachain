#!/bin/bash

### BEGIN INIT INFO
# chkconfig: 35 99 99
# description: DynamoDB
### END INIT INFO

# Amount of memory for Java
JAVAMEM=256M

# Location of dynamodb files
LOCATION="/opt/dynamodb"

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

NAME="dynamodb"
DAEMON="$(which java)"
ARGS="-Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar --port {{ dynamodb_port }}"
JAR_NAME="DynamoDBLocal.jar"

LOGFILE="/opt/dynamodb/dynamodb.log"
PID_FILE="/var/run/dynamodb.pid"

# Exit if the package is not installed
if [ ! -x "$DAEMON" ]; then
  echo "Couldn't find $DAEMON"
  exit 99
fi

ACTION="${1}"

run_action() {
    echo -n "${1}"

    if
        ${2} &> /dev/null
    then
        RETVAL=${?}
        echo " [OK]"
    else
        RETVAL=${?}
        echo " [NG]"
        echo "${3}"
    fi

    return ${RETVAL}
}

start_daemon() {
    cd $LOCATION && \
      ($DAEMON $ARGS >> ${LOGFILE} 2>&1 & echo $! > ${PID_FILE})
    return ${?}
}

get_pid() {
    PID="$(cat ${PID_FILE} 2> /dev/null)"
}

get_status() {
    get_pid

    IS_ALIVE=0

    kill -0 ${PID} &> /dev/null

    if
        [ ${?} -eq 0 ]
    then
        IS_ALIVE=1
    fi
}

do_status() {
    get_status

    if
        [ "${PID}" == "" ]
    then
        echo "${NAME} is not running"
        RETVAL=1
    elif
        [ "${IS_ALIVE}" == "0" ]
    then
        echo "${NAME} is dead (pid: ${PID})"
        RETVAL=2
    else
        echo "${NAME} is running (pid: ${PID})"
    fi
}

do_start() {
    get_status

    if
        [ "${PID}" != "" ] && [ "${IS_ALIVE}" == "0" ]
    then
        echo "${NAME} seems dead (pid: ${PID}), please check that the server is healthy"
    fi

    if
        [ "${PID}" == "" ] || [ "${IS_ALIVE}" == "0" ]
    then
        run_action "Starting ${NAME}: " \
            "start_daemon" \
            "Starting ${NAME} failed. Please check ${LOG_FILE} for more info";

        RETVAL=$?
    else
        echo "${NAME} is already running"
        RETVAL=1
    fi
}

do_stop() {
    get_status

    if
        [ "${IS_ALIVE}" == "0" ]
    then
        echo "${NAME} is not running"
        RETVAL=1
    else
        run_action "Stopping ${NAME} (pid: ${PID})" \
            "kill ${PID}" \
            "Could not stop ${NAME}"

        RETVAL=${?}

        [ ${RETVAL} -eq 0 ] && rm -f ${PID_FILE}
    fi
}

case "${ACTION}" in
    "start")
            do_start
            ;;
    "stop")
            do_stop
            ;;
    "restart")
            do_stop
            do_start
            ;;
    "status")
            do_status
            ;;
    *)
            echo "Usage: ${0} {start|stop|restart|status}"
            RETVAL=1
esac

exit ${RETVAL}