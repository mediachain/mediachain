---
sudo: required

env:
  # - distribution: centos
  #   version: 6
  #   init: /sbin/init
  #   run_opts: ""
  #   playbook: test.yml
  # - distribution: centos
  #   version: 7
  #   init: /usr/lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  #   playbook: test.yml
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
    playbook: test.yml
  - distribution: ubuntu
    version: 12.04
    init: /sbin/init
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)

  # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-ipfs:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-ipfs/tests/${playbook} --syntax-check'

  # Ansible role  check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-ipfs/tests/${playbook}'

  # Test role idempotence.
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-ipfs/tests/${playbook}
#| grep 'changed=0.*failed=0'

#&& (echo 'Idempotence test: pass' && exit 0)
#|| (echo 'Idempotence test: fail' && exit 1)


  # Test ipfs server use running.
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "ansible localhost -m service -a \"name=ipfs state=started\"
    && (echo 'Service ipfs test: pass' && exit 0)
    || (echo 'Service ipfs test: fail' && exit 1)"


  # Verify that the swarm port is open
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "curl -s 'http://localhost:4001/' --compressed 2>/dev/null
    | grep -q 'SHA512\|multistream'
    && (echo 'Swarm port test: pass' && exit 0)
    || (echo 'Swarm port test: fail' && exit 1)"

  # Clean up
  - sudo docker stop "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
